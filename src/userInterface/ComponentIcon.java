/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface;

import Enums.SurfaceGenerationEnum;
import computerGraphics.B_Spline_Cubica;
import computerGraphics.B_Spline_Quadratica;
import computerGraphics.Curve;
import computerGraphics.GraphicComponent;
import computerGraphics.Point;
import java.awt.Color;
import java.util.HashSet;
import java.util.Set;
import listeners.ComponentListener;
import listeners.PointPositionListener;
import main.Validation;
//import java.util.HashSet;
//import java.util.Set;
//import listeners.ToolListener;

/**
 *
 * @author Elias
 */
public class ComponentIcon extends javax.swing.JPanel implements ComponentListener, PointPositionListener {

    private String name = "";
    protected boolean selected = false;
    protected int id;
    protected Set<ComponentListener> listeners; // Conjunto de listeners
    protected Set<PointPositionListener> listenersPoint; // Conjunto de listeners
    private final GraphicComponent component;
    private PointPosition pp;

    /**
     * Creates new form Component
     *
     * @param id
     * @param component
     */
    public ComponentIcon(int id, GraphicComponent component) {
        initComponents();
        
        bgSurface.add(rbRot);
        bgSurface.add(rbTrans);
        
        tfTrans.setVisible(false);
        
        listeners = new HashSet<>();
        name = component.getType() + id;
        jLabel1.setText(name);
        this.id = id;
        this.component = component;
        if (component.isSelected()) {
            selected = true;
            jPanel1.setBackground(new Color(240, 240, 240));
        }
        if (component instanceof Curve) {
            bGerar.setVisible(true);
            rbRot.setVisible(true);
            rbTrans.setVisible(true);
        } else {
            tfRot.setVisible(false);
            bGerar.setVisible(false);
            rbRot.setVisible(false);
            rbTrans.setVisible(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgSurface = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        bRemove = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        bGerar = new javax.swing.JButton();
        rbRot = new javax.swing.JRadioButton();
        rbTrans = new javax.swing.JRadioButton();
        tfTrans = new javax.swing.JTextField();
        tfRot = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();

        setBackground(new java.awt.Color(102, 102, 102));
        setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        setMaximumSize(new java.awt.Dimension(271, 42));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                formMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                formMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        bRemove.setBackground(new java.awt.Color(102, 102, 102));
        bRemove.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        bRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                bRemoveMousePressed(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("x");

        javax.swing.GroupLayout bRemoveLayout = new javax.swing.GroupLayout(bRemove);
        bRemove.setLayout(bRemoveLayout);
        bRemoveLayout.setHorizontalGroup(
            bRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        bRemoveLayout.setVerticalGroup(
            bRemoveLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jLabel1.setText("Ponto");

        bGerar.setText("GO!");
        bGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGerarActionPerformed(evt);
            }
        });

        rbRot.setBackground(new java.awt.Color(102, 102, 102));
        rbRot.setSelected(true);
        rbRot.setText("Rot.");
        rbRot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbRotActionPerformed(evt);
            }
        });

        rbTrans.setBackground(new java.awt.Color(102, 102, 102));
        rbTrans.setText("Trans.");
        rbTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbTransActionPerformed(evt);
            }
        });

        tfTrans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfTransActionPerformed(evt);
            }
        });

        tfRot.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfRotActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbRot)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tfRot, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbTrans)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(10, 10, 10)
                .addComponent(bGerar)
                .addContainerGap(36, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(208, Short.MAX_VALUE)
                    .addComponent(bRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(34, 34, 34)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbRot)
                            .addComponent(tfRot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbTrans)
                            .addComponent(tfTrans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bGerar))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(bRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(40, Short.MAX_VALUE)))
        );

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseEntered
        // TODO add your handling code here:
        if (!selected) {
            jPanel1.setBackground(new Color(204, 204, 204));            
            rbRot.setBackground(new Color(204, 204, 204));
            rbTrans.setBackground(new Color(204, 204, 204));
        }
    }//GEN-LAST:event_formMouseEntered

    private void formMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseExited
        // TODO add your handling code here:
        if (!selected) {
            jPanel1.setBackground(new Color(102, 102, 102));
            rbRot.setBackground(new Color(102, 102, 102));
            rbTrans.setBackground(new Color(102, 102, 102));
        }
    }//GEN-LAST:event_formMouseExited

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        listeners.stream().forEach((listener) -> {
            listener.componentSelected(id);
        });
        if (!selected) {
            selected = true;
            jPanel1.setBackground(new Color(240, 240, 240));
            rbRot.setBackground(new Color(240, 240, 240));
            rbTrans.setBackground(new Color(240, 240, 240));
        } else {
            selected = false;
            jPanel1.setBackground(new Color(102, 102, 102));
            rbRot.setBackground(new Color(102, 102, 102));
            rbTrans.setBackground(new Color(102, 102, 102));
        }
    }//GEN-LAST:event_formMousePressed

    private void bRemoveMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bRemoveMousePressed
        // TODO add your handling code here:
        listeners.stream().forEach((listener) -> {
            listener.componentRemoved(id);
        });
    }//GEN-LAST:event_bRemoveMousePressed

    private void bGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGerarActionPerformed
        // TODO add your handling code here:
        if (component instanceof Curve) {
            //System.out.println("ENTROU NO IF");
            Curve curve = (Curve) component;
            if(rbRot.isSelected()){
                curve.generateSurface(SurfaceGenerationEnum.Rotation, Validation.validateRotation(tfRot.getText()));
            }else{
                curve.generateSurface(SurfaceGenerationEnum.Translation, Validation.validateTranslation(tfTrans.getText()));
            }
            
            listeners.stream().forEach((listener) -> {
                listener.componentRemoved(id);
            });
        }
    }//GEN-LAST:event_bGerarActionPerformed

    private void rbTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbTransActionPerformed
        // TODO add your handling code here:
        tfTrans.setVisible(true);
        tfRot.setVisible(false);
        jPanel1.revalidate();
    }//GEN-LAST:event_rbTransActionPerformed

    private void tfTransActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfTransActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfTransActionPerformed

    private void tfRotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfRotActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfRotActionPerformed

    private void rbRotActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbRotActionPerformed
        // TODO add your handling code here:
        tfTrans.setVisible(false);
        tfRot.setVisible(true);
        jPanel1.revalidate();
    }//GEN-LAST:event_rbRotActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bGerar;
    private javax.swing.JPanel bRemove;
    private javax.swing.ButtonGroup bgSurface;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton rbRot;
    private javax.swing.JRadioButton rbTrans;
    private javax.swing.JTextField tfRot;
    private javax.swing.JTextField tfTrans;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentRemoved(int i) {
        if (i < id) {
            id--;
        }
    }

    @Override
    public void componentMoved(int i, double x, double y, int ind) {

    }

    public void addListener(ComponentListener listener) {
        listeners.add(listener);
    }

    public void removeListener(ComponentListener listener) {
        listeners.remove(listener);
    }

    @Override
    public void componentSelected(int id) {
    }

    @Override
    public void pointClickedToComponent(int id) {
        jPanel3.removeAll();
        this.revalidate();

        //if (id == this.id) {
        String type = component.getType();
        if ("Bezier".equals(type)
                || "Hermite".equals(type)
                || "B_Spline_C".equals(type)
                || "B_Spline_Q".equals(type)) {
            Curve curve = (Curve) component;
            int count, pos;
            count = 0;
            pos = -1;
            for (Point p : curve.getPoints()) {
                if (p.isSelected()) {
                    pos = count;
                }
                count++;
            }

            if (pos >= 0) {
                pp = new PointPosition(pos, curve.getPoints().get(pos).getX(), curve.getPoints().get(pos).getY());
                pp.addListener(this);
                ///Adiciona Point POsition nesse painel
                javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
                jPanel3.setLayout(jPanel3Layout);
                jPanel3Layout.setHorizontalGroup(
                        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(pp, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                );
                jPanel3Layout.setVerticalGroup(
                        jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 87, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(pp, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                );
                /////
            }
        }
        //}
    }

    @Override
    public void pointPositionChanged(double x, double y, int pos) {
        Curve curve = (Curve) component;
        curve.getPoints().get(pos).setX(x);
        curve.getPoints().get(pos).setY(y);

        listeners.stream().forEach((listener) -> {
            listener.positionChanged();
        });

//        }
    }

    @Override
    public void positionChanged() {

    }

}
