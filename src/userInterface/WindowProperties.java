/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface;

import computerGraphics.GraphicComponent;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JColorChooser;
import lighting.LightController;
import listeners.CanvasListener;
import listeners.PropertiesListener;
import main.Validation;

/**
 *
 * @author Elias
 */
public class WindowProperties extends javax.swing.JPanel implements CanvasListener {

    private Set<PropertiesListener> listeners; // Conjunto de listeners

    /**
     * Creates new form WindowSettings
     */
    public WindowProperties(double xMin, double xMax, double yMin, double yMax, int width, int height) {
        initComponents();
        tfWidth.setText(width + "");
        tfHeight.setText(height + "");            
        
        tfXmin.setText(Validation.validateMin(xMin +"") + "");
        tfYmin.setText(Validation.validateMin(yMin +"")+ "");
        tfXmax.setText(Validation.validateMax(xMax +"") + "");
        tfYmax.setText(Validation.validateMax(yMax +"") + "");                

        listeners = new HashSet<>();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel8 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        tfWidth = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        tfHeight = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel14 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        tfXmin = new javax.swing.JTextField();
        jPanel15 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        tfXmax = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jPanel16 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        tfYmin = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        tfYmax = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        lightColor = new javax.swing.JPanel();
        lightIntesity = new javax.swing.JSlider();

        setBackground(new java.awt.Color(102, 102, 102));
        setMaximumSize(new java.awt.Dimension(268, 210));
        setLayout(new java.awt.GridLayout(2, 0));

        jPanel8.setBackground(new java.awt.Color(102, 102, 102));
        jPanel8.setLayout(new java.awt.GridLayout(4, 1));

        jPanel1.setBackground(new java.awt.Color(102, 102, 102));
        jPanel1.setMaximumSize(new java.awt.Dimension(134, 42));
        jPanel1.setMinimumSize(new java.awt.Dimension(134, 42));
        jPanel1.setLayout(new java.awt.GridLayout(1, 2));

        jPanel13.setBackground(new java.awt.Color(102, 102, 102));

        jLabel4.setText("Width:");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfWidth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(jPanel13);

        jPanel9.setBackground(new java.awt.Color(102, 102, 102));

        jLabel5.setText("Height:");

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfHeight, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfHeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel1.add(jPanel9);

        jPanel8.add(jPanel1);

        jPanel3.setBackground(new java.awt.Color(102, 102, 102));
        jPanel3.setMaximumSize(new java.awt.Dimension(134, 42));
        jPanel3.setMinimumSize(new java.awt.Dimension(134, 42));
        jPanel3.setLayout(new java.awt.GridLayout(1, 2));

        jPanel14.setBackground(new java.awt.Color(102, 102, 102));

        jLabel6.setText("Xmin:");

        tfXmin.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfXmin, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel14Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(tfXmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.add(jPanel14);

        jPanel15.setBackground(new java.awt.Color(102, 102, 102));

        jLabel8.setText("Xmax:");

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfXmax, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel15Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfXmax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.add(jPanel15);

        jPanel8.add(jPanel3);

        jPanel4.setBackground(new java.awt.Color(102, 102, 102));
        jPanel4.setMaximumSize(new java.awt.Dimension(134, 42));
        jPanel4.setMinimumSize(new java.awt.Dimension(134, 42));
        jPanel4.setLayout(new java.awt.GridLayout(1, 2));

        jPanel16.setBackground(new java.awt.Color(102, 102, 102));

        jLabel10.setText("Ymin:");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfYmin, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(tfYmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.add(jPanel16);

        jPanel17.setBackground(new java.awt.Color(102, 102, 102));

        jLabel11.setText("Ymax:");

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfYmax, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(tfYmax, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.add(jPanel17);

        jPanel8.add(jPanel4);

        jPanel2.setBackground(new java.awt.Color(102, 102, 102));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        jButton1.setText("Change");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.ipadx = 30;
        gridBagConstraints.ipady = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 67, 0, 67);
        jPanel2.add(jButton1, gridBagConstraints);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel5, new java.awt.GridBagConstraints());

        jPanel8.add(jPanel2);

        add(jPanel8);

        jPanel7.setBackground(new java.awt.Color(102, 102, 102));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Light Controller", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel7.setLayout(new java.awt.BorderLayout());

        lightColor.setBackground(new java.awt.Color(255, 255, 255));
        lightColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lightColorMousePressed(evt);
            }
        });

        javax.swing.GroupLayout lightColorLayout = new javax.swing.GroupLayout(lightColor);
        lightColor.setLayout(lightColorLayout);
        lightColorLayout.setHorizontalGroup(
            lightColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 256, Short.MAX_VALUE)
        );
        lightColorLayout.setVerticalGroup(
            lightColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 206, Short.MAX_VALUE)
        );

        jPanel7.add(lightColor, java.awt.BorderLayout.CENTER);

        lightIntesity.setBackground(new java.awt.Color(102, 102, 102));
        lightIntesity.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                lightIntesityStateChanged(evt);
            }
        });
        jPanel7.add(lightIntesity, java.awt.BorderLayout.PAGE_START);

        add(jPanel7);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here: 
        
        //Escala equivalente
        double width = Validation.validateWidth(tfWidth.getText());
        double height = Validation.validateHeight(tfHeight.getText());

        double xMin = Validation.validateMin(tfXmin.getText());
        double xMax = Validation.validateMax(tfXmax.getText());
        double yMin = Validation.validateMin(tfYmin.getText());
        double yMax = Validation.validateMax(tfYmax.getText());

        NumberFormat formatter = new DecimalFormat("0.0000");
        double canvasScale = height / width;
        double realScale = (yMax - yMin) / (xMax - xMin);
        canvasScale = Double.parseDouble(formatter.format(canvasScale).replace(',', '.'));
        realScale = Double.parseDouble(formatter.format(realScale).replace(',', '.'));
        
        while (canvasScale != realScale) {
            if (canvasScale > realScale) {
                height--;
            } else {
                width--;
            }
            canvasScale = height / width;
            canvasScale = Double.parseDouble(formatter.format(canvasScale).replace(',', '.'));            
        }

        tfWidth.setText((int)width+"");
        tfHeight.setText((int)height+"");
        tfXmin.setText(xMin+"");
        tfXmax.setText(xMax+"");
        tfYmin.setText(yMin+"");
        tfYmax.setText(yMax+"");
        //

        for (PropertiesListener listener : listeners) {
            listener.sizeChanged(Validation.validateWidth(tfWidth.getText()),
                    Validation.validateHeight(tfHeight.getText()));
        }
        for (PropertiesListener listener : listeners) {
            listener.limitsChanged(Validation.validateMin(tfXmin.getText()),
                    Validation.validateMax(tfXmax.getText()),
                    Validation.validateMin(tfYmin.getText()),
                    Validation.validateMax(tfYmax.getText()));
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void lightColorMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lightColorMousePressed
        // TODO add your handling code here:
        Color newColor = JColorChooser.showDialog(null, "Choose a color", lightColor.getBackground());
        lightColor.setBackground(newColor);
        
        LightController.color = newColor;
        
        for (PropertiesListener listener : listeners) {
            listener.lightChanged();
        }
    }//GEN-LAST:event_lightColorMousePressed

    private void lightIntesityStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_lightIntesityStateChanged
        // TODO add your handling code here:
        LightController.intensity = (double) lightIntesity.getValue()/lightIntesity.getMaximum();
        
        for (PropertiesListener listener : listeners) {
            listener.lightChanged();
        }
    }//GEN-LAST:event_lightIntesityStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel lightColor;
    private javax.swing.JSlider lightIntesity;
    private javax.swing.JTextField tfHeight;
    private javax.swing.JTextField tfWidth;
    private javax.swing.JTextField tfXmax;
    private javax.swing.JTextField tfXmin;
    private javax.swing.JTextField tfYmax;
    private javax.swing.JTextField tfYmin;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent evt) {

    }

    public void addListener(PropertiesListener listener) {
        this.listeners.add(listener);
    }

    public void removeListener(PropertiesListener listener) {
        this.listeners.remove(listener);
    }
    
    public void changed(double xMin, double yMin, double xMax, double yMax, int width, int height){
        tfWidth.setText(width + "");
        tfHeight.setText(height + "");
        tfXmin.setText(xMin + "");
        tfYmin.setText(yMin + "");
        tfXmax.setText(xMax + "");
        tfYmax.setText(yMax + "");
       

        tfWidth.setText((int)width+"");
        tfHeight.setText((int)height+"");
        //

        for (PropertiesListener listener : listeners) {
            listener.sizeChanged(Validation.validateWidth(tfWidth.getText()),
                    Validation.validateHeight(tfHeight.getText()));
        }
        for (PropertiesListener listener : listeners) {
            listener.limitsChanged(Validation.validateMin(tfXmin.getText()),
                    Validation.validateMax(tfXmax.getText()),
                    Validation.validateMin(tfYmin.getText()),
                    Validation.validateMax(tfYmax.getText()));
        }
    }
    
    public void changedNewFile(double xm, double ym, double xM, double yM, int w, int h){
        tfWidth.setText(w + "");
        tfHeight.setText(h + "");
        tfXmin.setText(xm + "");
        tfYmin.setText(ym + "");
        tfXmax.setText(xM + "");
        tfYmax.setText(yM + "");
        
        //Escala equivalente
        double width = Validation.validateWidth(tfWidth.getText());
        double height = Validation.validateHeight(tfHeight.getText());

        double xMin = Validation.validateMin(tfXmin.getText());
        double xMax = Validation.validateMax(tfXmax.getText());
        double yMin = Validation.validateMin(tfYmin.getText());
        double yMax = Validation.validateMax(tfYmax.getText());
       

        NumberFormat formatter = new DecimalFormat("0.0000");
        double canvasScale = height / width;
        double realScale = (yMax - yMin) / (xMax - xMin);
        canvasScale = Double.parseDouble(formatter.format(canvasScale).replace(',', '.'));
        realScale = Double.parseDouble(formatter.format(realScale).replace(',', '.'));
        
        while (canvasScale != realScale) {
            if (canvasScale > realScale) {
                height--;
            } else {
                width--;
            }
            canvasScale = height / width;
            canvasScale = Double.parseDouble(formatter.format(canvasScale).replace(',', '.'));            
        }

        tfWidth.setText((int)width+"");
        tfHeight.setText((int)height+"");
        //

        for (PropertiesListener listener : listeners) {
            listener.sizeChanged(Validation.validateWidth(tfWidth.getText()),
                    Validation.validateHeight(tfHeight.getText()));
        }
        for (PropertiesListener listener : listeners) {
            listener.limitsChanged(Validation.validateMin(tfXmin.getText()),
                    Validation.validateMax(tfXmax.getText()),
                    Validation.validateMin(tfYmin.getText()),
                    Validation.validateMax(tfYmax.getText()));
        }
    }

    @Override
    public void mouseMoved(MouseEvent evt) {
        //lMouseX1.setText("x: " + evt.getX());
        //lMouseY1.setText("y: " + evt.getY());
    }

    @Override
    public void mouseMovedReal(double x, double y) {
        //lMouseX.setText("x: " + x);
        //lMouseY.setText("y: " + y);
    }

    @Override
    public void mouseDragged(double dx, double dy) {

        tfXmin.setText(Validation.validateMin(tfXmin.getText()) + dx + "");
        tfXmax.setText(Validation.validateMax(tfXmax.getText()) + dx + "");
        tfYmin.setText(Validation.validateMin(tfYmin.getText()) + dy + "");
        tfYmax.setText(Validation.validateMax(tfYmax.getText()) + dy + "");

        for (PropertiesListener listener : listeners) {
            listener.limitsChanged(Validation.validateMin(tfXmin.getText()),
                    Validation.validateMax(tfXmax.getText()),
                    Validation.validateMin(tfYmin.getText()),
                    Validation.validateMax(tfYmax.getText()));
        }
    }

    @Override
    public void mouseWheelMoved(double dx, double dy) {
        tfXmin.setText(Validation.validateMin(tfXmin.getText()) + dx + "");
        tfXmax.setText(Validation.validateMax(tfXmax.getText()) - dx + "");
        tfYmin.setText(Validation.validateMin(tfYmin.getText()) + dy + "");
        tfYmax.setText(Validation.validateMax(tfYmax.getText()) - dy + "");

        for (PropertiesListener listener : listeners) {
            listener.limitsChanged(Validation.validateMin(tfXmin.getText()),
                    Validation.validateMax(tfXmax.getText()),
                    Validation.validateMin(tfYmin.getText()),
                    Validation.validateMax(tfYmax.getText()));
        }
    }

    @Override
    public void componentAdded(int i) {

    }

    @Override
    public void componentRemovedCanvas(int i) {

    }

    @Override
    public void pointClicked(int id) {
        
    }

    @Override
    public void mouseDraggedToComponent() {
        
    }
}
